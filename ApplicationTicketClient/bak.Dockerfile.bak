# src/Dockerfile

# Stage 1 - Build
FROM node:18 AS builder

WORKDIR /app

# Install dependencies
COPY package.json package-lock.json ./
RUN npm install --legacy-peer-deps

# Copy all required frontend files
COPY ./src ./src
COPY index.html ./
COPY vite.config.ts ./
COPY tsconfig.json ./
COPY tsconfig.app.json ./
COPY tsconfig.node.json ./
COPY postcss.config.js ./
COPY tailwind.config.js ./

# Build with Vite
RUN npm run build

# Stage 2 - Serve the built frontend
FROM node:18-alpine

WORKDIR /app

# Install serve preview server
RUN npm install -g serve

# Copy built frontend
COPY --from=builder /app/dist ./dist

EXPOSE 3000

CMD ["serve", "-s", "dist", "-l", "3000"]


# Stage 2: Backend build
FROM node:18 AS backend-build

WORKDIR /app

# Install backend deps
COPY package.json package-lock.json ./
RUN npm install --production --legacy-peer-deps

# ✅ Copy the entire `server/` directory (where index.js is)
COPY ./server ./server

# ✅ Copy frontend build to backend's public
COPY --from=frontend-build /app/dist ./server/public

# Stage 3: Runtime
FROM node:18-slim

WORKDIR /app

# ✅ Copy final backend (includes index.js)
COPY --from=backend-build /app/server ./server
COPY --from=backend-build /app/node_modules ./node_modules

COPY package.json ./

ENV NODE_ENV=production
ENV PORT=3000

EXPOSE 3000

# ✅ Correct backend entrypoint
CMD ["node", "server/index.js"]
